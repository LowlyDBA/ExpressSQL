version: 0.9.{build}

pull_requests:
  do_not_increment_build_number: false
  
max_jobs: 1

clone_folder: C:\sqlexpress\

environment:
    #MSSQL Credentials
    MSSQL_LOGIN: sa
    MSSQL_PASS: Password12!
    
    #Test Files
    CREATESCRIPT1: sp_sizeoptimiser.sql
    CREATESCRIPT2: sp_helpme.sql
    CREATESCRIPT3: sp_doc.sql
    TSQLTSETCLR:  tests\tSQLt\SetClrEnabled.sql
    TSQLTCREATEDB: tests\tSQLt\CreateDatabase.sql
    TSQLTINSTALL: tests\tSQLt\tSQLt.class.sql
    TSQLTBUILDPATH: tests\build
    TSQLTTEST: tests\run\run_tests.sql
    COMBINED_FILE: install_expsql.sql
    
    #Build Constants
    TARGET_DB: tSQLt
    
    matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      MSSQL: SQL2019
      DB_INSTANCE: (local)\SQL2019
      
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      MSSQL: SQL2017
      DB_INSTANCE: (local)\SQL2017
      
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      MSSQL: SQL2016
      DB_INSTANCE: (local)\SQL2016
      
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      MSSQL: SQL2014
      DB_INSTANCE: (local)\SQL2014
      
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      MSSQL: SQL2012SP1
      DB_INSTANCE: (local)\SQL2012SP1

install:
- echo Installing SqlServer PS Module
- ps: Install-Module SqlServer -Force -AllowClobber

build_script:
- echo Starting SQL Server
- ps: >-

    $SQLInstance = $env:MSSQL;
    Start-Service "MSSQL`$$SQLInstance";
   
- echo Setting up tSQLt
- cmd: >-

    SET SCRIPT=%CLONE_FOLDER%%TSQLTSETCLR%
    
    sqlcmd -S %DB_INSTANCE% -U %MSSQL_LOGIN% -P %MSSQL_PASS% -i %SCRIPT% -d master -b > NUL
    
    SET SCRIPT=%CLONE_FOLDER%%TSQLTCREATEDB%
    
    sqlcmd -S %DB_INSTANCE% -U %MSSQL_LOGIN% -P %MSSQL_PASS% -i %SCRIPT% -d master -b > NUL
    
    SET SCRIPT=%CLONE_FOLDER%%TSQLTINSTALL%
    
    sqlcmd -S %DB_INSTANCE% -U %MSSQL_LOGIN% -P %MSSQL_PASS% -i %SCRIPT% -d %TARGET_DB% -b

- echo Installing ExpressSQL Scripts
- ps: >-

    ForEach ($filename in Get-Childitem -Path $env:CLONE_FOLDER -Filter "*.sql") {
        Invoke-SqlCmd –ServerInstance $env:DB_INSTANCE -Database $env:TARGET_DB -InputFile $filename.fullname -Username $env:MSSQL_LOGIN -Password $env:MSSQL_PASS
    }

- echo Building tSQLt Tests
- ps: >-

    ForEach ($filename in Get-Childitem -Path $env:TSQLTBUILDPATH -Filter "*.sql") {
        Invoke-SqlCmd –ServerInstance $env:DB_INSTANCE -Database $env:TARGET_DB -InputFile $filename.fullname -Username $env:MSSQL_LOGIN -Password $env:MSSQL_PASS
    }

test_script:
- echo Running unit tests
- cmd: >-

    SET SCRIPT=%CLONE_FOLDER%%TSQLTTEST%

    sqlcmd -S %DB_INSTANCE% -U %MSSQL_LOGIN% -P %MSSQL_PASS% -i %SCRIPT% -d %TARGET_DB% -b -r 1 > NUL

deploy_script:
  - ps: >-
      git config --global credential.helper store
      
      Add-Content "$HOME\.git-credentials" "https://$($env:access_token):x-oauth-basic@github.com`n"

      Get-Item *.sql | Get-Content | Out-File %COMBINED_FILE%

      git config --global user.email "appveyor@expressdb.io" 
      
      git config --global user.name "appveyor"
      
      git add .
      
      git commit -a -m "Generate combined installer script" -q
      
      git push origin -f


