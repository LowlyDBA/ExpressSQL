version: 0.9.{build}

pull_requests:
  do_not_increment_build_number: false
  
max_jobs: 1

clone_folder: C:\sqlexpress\

environment:
    access_token:
      secure: XQvkhXxMw7yJPQF4xQe/OV5+u0Dhx0bsaXIHE2PNvPJr15qw+oA9SNlKYnGo6UNQ

    MSSQL_LOGIN: sa
    MSSQL_PASS: Password12!
    TSQLTSETCLR:  tests\tSQLt\SetClrEnabled.sql
    TSQLTCREATEDB: tests\tSQLt\CreateDatabase.sql
    TSQLTINSTALL: tests\tSQLt\tSQLt.class.sql
    TSQLTBUILDPATH: tests\build
    TSQLTTESTPATH: tests\run
    COMBINED_FILE: install_expsql.sql
    TARGET_DB: tSQLt
    
    matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      MSSQL: SQL2019
      DB_INSTANCE: (local)\SQL2019
      LINT_CONFIG: appveyor\.tsqllintrc_150
      
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      MSSQL: SQL2017
      DB_INSTANCE: (local)\SQL2017
      LINT_CONFIG: appveyor\.tsqllintrc_140
      
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      MSSQL: SQL2016
      DB_INSTANCE: (local)\SQL2016
      LINT_CONFIG: appveyor\.tsqllintrc_130
      
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      MSSQL: SQL2014
      DB_INSTANCE: (local)\SQL2014
      LINT_CONFIG: appveyor\.tsqllintrc_120
      
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      MSSQL: SQL2012SP1
      DB_INSTANCE: (local)\SQL2012SP1
      LINT_CONFIG: appveyor/.tsqllintrc_110

install:
- ps: Install-Module SqlServer -Force -AllowClobber
- ps: Install-Product node $env:nodejs_version
- npm install tsqllint -g

- echo Starting SQL Server
- ps: >-
    $SQLInstance = $env:MSSQL;
    Start-Service "MSSQL`$$SQLInstance";
   
- echo Setting up tSQLt
- cmd: >-
    SET SCRIPT=%CLONE_FOLDER%%TSQLTSETCLR%
    
    sqlcmd -S %DB_INSTANCE% -U %MSSQL_LOGIN% -P %MSSQL_PASS% -i %SCRIPT% -d master -b > NUL
    
    SET SCRIPT=%CLONE_FOLDER%%TSQLTCREATEDB%
    
    sqlcmd -S %DB_INSTANCE% -U %MSSQL_LOGIN% -P %MSSQL_PASS% -i %SCRIPT% -d master -b > NUL
    
    SET SCRIPT=%CLONE_FOLDER%%TSQLTINSTALL%
    
    sqlcmd -S %DB_INSTANCE% -U %MSSQL_LOGIN% -P %MSSQL_PASS% -i %SCRIPT% -d %TARGET_DB% -b

build_script:
- echo Installing ExpressSQL Scripts
- ps: >-
    ForEach ($filename in Get-Childitem -Path $env:CLONE_FOLDER -Filter "*.sql") {
        Invoke-SqlCmd –ServerInstance $env:DB_INSTANCE -Database $env:TARGET_DB -InputFile $filename.fullname -Username $env:MSSQL_LOGIN -Password $env:MSSQL_PASS
    }

- echo Building tSQLt Tests
- ps: >-
    ForEach ($filename in Get-Childitem -Path $env:TSQLTBUILDPATH -Filter "*.sql") {
        Invoke-SqlCmd –ServerInstance $env:DB_INSTANCE -Database $env:TARGET_DB -InputFile $filename.fullname -Username $env:MSSQL_LOGIN -Password $env:MSSQL_PASS
    }

test_script:
- echo Running unit tests
- ps: >-
    ForEach ($filename in Get-Childitem -Path $env:TSQLTTESTPATH -Filter "*.sql") {
        Invoke-SqlCmd –ServerInstance $env:DB_INSTANCE -Database $env:TARGET_DB -InputFile $filename.fullname -Username $env:MSSQL_LOGIN -Password $env:MSSQL_PASS -Verbose | Out-Null
    }

- echo Running TSQLLint 
- ps: tsqllint -c $env:LINT_CONFIG *.sql